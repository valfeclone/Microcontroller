Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Small function inlining results

Inlined total of 0 calls.

==============================================================================

Section Cross References

    system_nuc100series.o(i.CLK_GetPLLClockFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    system_nuc100series.o(i.SystemCoreClockUpdate) refers to system_nuc100series.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    system_nuc100series.o(i.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidivmod
    system_nuc100series.o(i.SystemCoreClockUpdate) refers to system_nuc100series.o(.data) for PllClock
    startup_nuc100series.o(RESET) refers to startup_nuc100series.o(STACK) for __initial_sp
    startup_nuc100series.o(RESET) refers to startup_nuc100series.o(.text) for Reset_Handler
    startup_nuc100series.o(.text) refers to system_nuc100series.o(i.SystemInit) for SystemInit
    startup_nuc100series.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    clk.o(i.CLK_DisableCKO) refers to clk.o(i.CLK_DisableModuleClock) for CLK_DisableModuleClock
    clk.o(i.CLK_DisableModuleClock) refers to clk.o(.constdata) for .constdata
    clk.o(i.CLK_EnableCKO) refers to clk.o(i.CLK_EnableModuleClock) for CLK_EnableModuleClock
    clk.o(i.CLK_EnableCKO) refers to clk.o(i.CLK_SetModuleClock) for CLK_SetModuleClock
    clk.o(i.CLK_EnableModuleClock) refers to clk.o(.constdata) for .constdata
    clk.o(i.CLK_EnablePLL) refers to clk.o(i.CLK_WaitClockReady) for CLK_WaitClockReady
    clk.o(i.CLK_EnablePLL) refers to uidiv.o(.text) for __aeabi_uidivmod
    clk.o(i.CLK_EnablePLL) refers to clk.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    clk.o(i.CLK_GetCPUFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetCPUFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_GetHCLKFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetHCLKFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_GetPCLKFreq) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_GetPCLKFreq) refers to system_nuc100series.o(.data) for SystemCoreClock
    clk.o(i.CLK_GetPLLClockFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    clk.o(i.CLK_SetCoreClock) refers to clk.o(i.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(i.CLK_SetCoreClock) refers to clk.o(i.CLK_SetHCLK) for CLK_SetHCLK
    clk.o(i.CLK_SetHCLK) refers to system_nuc100series.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(i.CLK_SetModuleClock) refers to clk.o(.constdata) for .constdata
    spi.o(i.CLK_GetPLLClockFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_GetBusClock) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_GetBusClock) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_GetBusClock) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_Open) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_Open) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_Open) refers to uidiv.o(.text) for __aeabi_uidivmod
    spi.o(i.SPI_SetBusClock) refers to clk.o(i.CLK_GetHCLKFreq) for CLK_GetHCLKFreq
    spi.o(i.SPI_SetBusClock) refers to spi.o(i.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    spi.o(i.SPI_SetBusClock) refers to uidiv.o(.text) for __aeabi_uidivmod
    lcd.o(i.clear_LCD) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.clear_LCD) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.clear_LCD) refers to lcd.o(.bss) for DisplayBuffer
    lcd.o(i.draw_Bmp120x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x24) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x32) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x40) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x48) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp16x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x32) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x48) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp32x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp64x64) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp8x16) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_Bmp8x8) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    lcd.o(i.draw_LCD) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.draw_LCD) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.draw_Pixel) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.draw_Pixel) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.draw_Pixel) refers to lcd.o(.bss) for DisplayBuffer
    lcd.o(i.init_LCD) refers to lcd.o(i.init_SPI3) for init_SPI3
    lcd.o(i.init_LCD) refers to lcd.o(i.lcdWriteCommand) for lcdWriteCommand
    lcd.o(i.init_SPI3) refers to spi.o(i.SPI_Open) for SPI_Open
    lcd.o(i.init_SPI3) refers to spi.o(i.SPI_DisableAutoSS) for SPI_DisableAutoSS
    lcd.o(i.printC) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.printC) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.printC) refers to lcd.o(.data) for Font8x16
    lcd.o(i.printC_5x7) refers to lcd.o(i.lcdSetAddr) for lcdSetAddr
    lcd.o(i.printC_5x7) refers to lcd.o(i.lcdWriteData) for lcdWriteData
    lcd.o(i.printC_5x7) refers to lcd.o(.data) for Font5x7
    lcd.o(i.printS) refers to lcd.o(i.printC) for printC
    lcd.o(i.printS) refers to strlen.o(.text) for strlen
    lcd.o(i.printS_5x7) refers to lcd.o(i.printC_5x7) for printC_5x7
    lcd.o(i.printS_5x7) refers to strlen.o(.text) for strlen
    lcd.o(i.print_Line) refers to lcd.o(i.printC) for printC
    lcd.o(i.print_Line) refers to strlen.o(.text) for strlen
    scankey.o(i.OpenKeyPad) refers to gpio.o(i.GPIO_SetMode) for GPIO_SetMode
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_EnableXtalRC) for CLK_EnableXtalRC
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_WaitClockReady) for CLK_WaitClockReady
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_SetCoreClock) for CLK_SetCoreClock
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_EnableModuleClock) for CLK_EnableModuleClock
    sys_init.o(i.SYS_Init) refers to clk.o(i.CLK_SetModuleClock) for CLK_SetModuleClock
    main.o(i.check_collision) refers to main.o(.bss) for state
    main.o(i.increase_point) refers to main.o(.bss) for state
    main.o(i.main) refers to sys_init.o(i.SYS_Init) for SYS_Init
    main.o(i.main) refers to gpio.o(i.GPIO_SetMode) for GPIO_SetMode
    main.o(i.main) refers to scankey.o(i.OpenKeyPad) for OpenKeyPad
    main.o(i.main) refers to lcd.o(i.init_LCD) for init_LCD
    main.o(i.main) refers to main.o(i.main_menu) for main_menu
    main.o(i.main) refers to main.o(i.update_game) for update_game
    main.o(i.main) refers to main.o(i.render_game) for render_game
    main.o(i.main) refers to main.o(.bss) for state
    main.o(i.main) refers to system_nuc100series.o(.data) for CyclesPerUs
    main.o(i.main) refers to main.o(.data) for highscore
    main.o(i.main_menu) refers to lcd.o(i.clear_LCD) for clear_LCD
    main.o(i.main_menu) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    main.o(i.main_menu) refers to lcd.o(i.print_Line) for print_Line
    main.o(i.main_menu) refers to scankey.o(i.ScanKey) for ScanKey
    main.o(i.main_menu) refers to main.o(.constdata) for .constdata
    main.o(i.main_menu) refers to main.o(.data) for highscore
    main.o(i.render_game) refers to lcd.o(i.clear_LCD) for clear_LCD
    main.o(i.render_game) refers to lcd.o(i.draw_Pixel) for draw_Pixel
    main.o(i.render_game) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    main.o(i.render_game) refers to lcd.o(i.print_Line) for print_Line
    main.o(i.render_game) refers to main.o(.bss) for state
    main.o(i.return_obstacle) refers to rand.o(.text) for rand
    main.o(i.return_obstacle) refers to idiv.o(.text) for __aeabi_idivmod
    main.o(i.return_obstacle) refers to main.o(.bss) for state
    main.o(i.update_game) refers to dflti.o(.text) for __aeabi_i2d
    main.o(i.update_game) refers to dmul.o(.text) for __aeabi_dmul
    main.o(i.update_game) refers to dadd.o(.text) for __aeabi_dadd
    main.o(i.update_game) refers to dfixi.o(.text) for __aeabi_d2iz
    main.o(i.update_game) refers to main.o(i.increase_point) for increase_point
    main.o(i.update_game) refers to scankey.o(i.ScanKey) for ScanKey
    main.o(i.update_game) refers to main.o(i.check_collision) for check_collision
    main.o(i.update_game) refers to main.o(i.return_obstacle) for return_obstacle
    main.o(i.update_game) refers to main.o(.bss) for state
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    rand.o(.text) refers to rand.o(.data) for .data
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_nuc100series.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_nuc100series.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing system_nuc100series.o(.rev16_text), (4 bytes).
    Removing system_nuc100series.o(.revsh_text), (4 bytes).
    Removing startup_nuc100series.o(HEAP), (0 bytes).
    Removing clk.o(.rev16_text), (4 bytes).
    Removing clk.o(.revsh_text), (4 bytes).
    Removing clk.o(i.CLK_DisableCKO), (16 bytes).
    Removing clk.o(i.CLK_DisableModuleClock), (60 bytes).
    Removing clk.o(i.CLK_DisablePLL), (20 bytes).
    Removing clk.o(i.CLK_DisableSysTick), (12 bytes).
    Removing clk.o(i.CLK_DisableXtalRC), (16 bytes).
    Removing clk.o(i.CLK_EnableCKO), (44 bytes).
    Removing clk.o(i.CLK_EnableSysTick), (72 bytes).
    Removing clk.o(i.CLK_GetCPUFreq), (16 bytes).
    Removing clk.o(i.CLK_GetHXTFreq), (28 bytes).
    Removing clk.o(i.CLK_GetLXTFreq), (24 bytes).
    Removing clk.o(i.CLK_GetPCLKFreq), (16 bytes).
    Removing clk.o(i.CLK_Idle), (36 bytes).
    Removing clk.o(i.CLK_PowerDown), (40 bytes).
    Removing clk.o(i.CLK_SetSysTickClockSrc), (20 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing gpio.o(i.GPIO_DisableInt), (28 bytes).
    Removing gpio.o(i.GPIO_EnableInt), (26 bytes).
    Removing spi.o(.rev16_text), (4 bytes).
    Removing spi.o(.revsh_text), (4 bytes).
    Removing spi.o(i.SPI_ClearIntFlag), (64 bytes).
    Removing spi.o(i.SPI_ClearRxFIFO), (10 bytes).
    Removing spi.o(i.SPI_ClearTxFIFO), (10 bytes).
    Removing spi.o(i.SPI_Close), (172 bytes).
    Removing spi.o(i.SPI_DisableFIFO), (12 bytes).
    Removing spi.o(i.SPI_DisableInt), (104 bytes).
    Removing spi.o(i.SPI_EnableAutoSS), (22 bytes).
    Removing spi.o(i.SPI_EnableFIFO), (32 bytes).
    Removing spi.o(i.SPI_EnableInt), (104 bytes).
    Removing spi.o(i.SPI_GetBusClock), (184 bytes).
    Removing spi.o(i.SPI_GetIntFlag), (146 bytes).
    Removing spi.o(i.SPI_GetStatus), (126 bytes).
    Removing spi.o(i.SPI_SetBusClock), (396 bytes).
    Removing lcd.o(.rev16_text), (4 bytes).
    Removing lcd.o(.revsh_text), (4 bytes).
    Removing lcd.o(i.draw_Bmp120x8), (86 bytes).
    Removing lcd.o(i.draw_Bmp16x16), (108 bytes).
    Removing lcd.o(i.draw_Bmp16x24), (108 bytes).
    Removing lcd.o(i.draw_Bmp16x32), (108 bytes).
    Removing lcd.o(i.draw_Bmp16x40), (108 bytes).
    Removing lcd.o(i.draw_Bmp16x48), (110 bytes).
    Removing lcd.o(i.draw_Bmp16x64), (110 bytes).
    Removing lcd.o(i.draw_Bmp16x8), (86 bytes).
    Removing lcd.o(i.draw_Bmp32x16), (144 bytes).
    Removing lcd.o(i.draw_Bmp32x32), (144 bytes).
    Removing lcd.o(i.draw_Bmp32x48), (144 bytes).
    Removing lcd.o(i.draw_Bmp32x64), (144 bytes).
    Removing lcd.o(i.draw_Bmp32x8), (86 bytes).
    Removing lcd.o(i.draw_Bmp64x64), (144 bytes).
    Removing lcd.o(i.draw_Bmp8x16), (140 bytes).
    Removing lcd.o(i.draw_Bmp8x8), (86 bytes).
    Removing lcd.o(i.draw_LCD), (52 bytes).
    Removing lcd.o(i.printC_5x7), (96 bytes).
    Removing lcd.o(i.printS), (42 bytes).
    Removing lcd.o(i.printS_5x7), (42 bytes).
    Removing scankey.o(.rev16_text), (4 bytes).
    Removing scankey.o(.revsh_text), (4 bytes).
    Removing scankey.o(i.delay), (16 bytes).
    Removing sys_init.o(.rev16_text), (4 bytes).
    Removing sys_init.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).

70 unused section(s) (total 4368 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_nuc100series.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    C:\Users\ASUS ROG\Documents\Koruptor The Game\main.c 0x00000000   Number         0  main.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\Device\Nuvoton\NUC100Series\Source\ARM\startup_NUC100Series.s 0x00000000   Number         0  startup_nuc100series.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\Device\Nuvoton\NUC100Series\Source\system_NUC100Series.c 0x00000000   Number         0  system_nuc100series.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\Nu-LB-NUC140\Source\LCD.c 0x00000000   Number         0  lcd.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\Nu-LB-NUC140\Source\SYS_init.c 0x00000000   Number         0  sys_init.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\Nu-LB-NUC140\Source\Scankey.c 0x00000000   Number         0  scankey.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\StdDriver\src\clk.c 0x00000000   Number         0  clk.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\StdDriver\src\gpio.c 0x00000000   Number         0  gpio.o ABSOLUTE
    C:\Users\ASUS ROG\Downloads\Nu-LB-NUC140_BSP3.00.004_v1.2\Library\StdDriver\src\spi.c 0x00000000   Number         0  spi.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Documents\\Koruptor The Game\\main.c 0x00000000   Number         0  main.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\Device\\Nuvoton\\NUC100Series\\Source\\system_NUC100Series.c 0x00000000   Number         0  system_nuc100series.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\Nu-LB-NUC140\\Source\\LCD.c 0x00000000   Number         0  lcd.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\Nu-LB-NUC140\\Source\\SYS_init.c 0x00000000   Number         0  sys_init.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\Nu-LB-NUC140\\Source\\Scankey.c 0x00000000   Number         0  scankey.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\StdDriver\\src\\clk.c 0x00000000   Number         0  clk.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\StdDriver\\src\\gpio.c 0x00000000   Number         0  gpio.o ABSOLUTE
    C:\\Users\\ASUS ROG\\Downloads\\Nu-LB-NUC140_BSP3.00.004_v1.2\\Library\\StdDriver\\src\\spi.c 0x00000000   Number         0  spi.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       76  startup_nuc100series.o(.text)
    Default_Handler                          0x000000ff   Thumb Code     2  startup_nuc100series.o(.text)
    .text                                    0x00000120   Section        0  uidiv.o(.text)
    .text                                    0x0000014c   Section        0  idiv.o(.text)
    .text                                    0x00000174   Section        0  rand.o(.text)
    .text                                    0x00000198   Section        0  strlen.o(.text)
    .text                                    0x000001a8   Section        0  dadd.o(.text)
    .text                                    0x0000030c   Section        0  dmul.o(.text)
    .text                                    0x000003dc   Section        0  dflti.o(.text)
    .text                                    0x00000404   Section        0  dfixi.o(.text)
    .text                                    0x0000044c   Section        0  llshl.o(.text)
    .text                                    0x0000046c   Section        0  llushr.o(.text)
    .text                                    0x0000048e   Section        0  llsshr.o(.text)
    .text                                    0x000004b4   Section        0  iusefp.o(.text)
    .text                                    0x000004b4   Section        0  depilogue.o(.text)
    .text                                    0x00000574   Section       36  init.o(.text)
    i.CLK_EnableModuleClock                  0x00000598   Section        0  clk.o(i.CLK_EnableModuleClock)
    i.CLK_EnablePLL                          0x000005d4   Section        0  clk.o(i.CLK_EnablePLL)
    i.CLK_EnableXtalRC                       0x00000758   Section        0  clk.o(i.CLK_EnableXtalRC)
    i.CLK_GetHCLKFreq                        0x00000768   Section        0  clk.o(i.CLK_GetHCLKFreq)
    i.CLK_GetPLLClockFreq                    0x00000778   Section        0  system_nuc100series.o(i.CLK_GetPLLClockFreq)
    CLK_GetPLLClockFreq                      0x00000779   Thumb Code   112  system_nuc100series.o(i.CLK_GetPLLClockFreq)
    i.CLK_GetPLLClockFreq                    0x000007f8   Section        0  clk.o(i.CLK_GetPLLClockFreq)
    CLK_GetPLLClockFreq                      0x000007f9   Thumb Code   112  clk.o(i.CLK_GetPLLClockFreq)
    i.CLK_GetPLLClockFreq                    0x00000878   Section        0  spi.o(i.CLK_GetPLLClockFreq)
    CLK_GetPLLClockFreq                      0x00000879   Thumb Code   112  spi.o(i.CLK_GetPLLClockFreq)
    i.CLK_SetCoreClock                       0x000008f8   Section        0  clk.o(i.CLK_SetCoreClock)
    i.CLK_SetHCLK                            0x000009a0   Section        0  clk.o(i.CLK_SetHCLK)
    i.CLK_SetModuleClock                     0x00000a0c   Section        0  clk.o(i.CLK_SetModuleClock)
    i.CLK_WaitClockReady                     0x00000b14   Section        0  clk.o(i.CLK_WaitClockReady)
    i.GPIO_SetMode                           0x00000b3c   Section        0  gpio.o(i.GPIO_SetMode)
    i.OpenKeyPad                             0x00000b6c   Section        0  scankey.o(i.OpenKeyPad)
    i.SPI_DisableAutoSS                      0x00000bb0   Section        0  spi.o(i.SPI_DisableAutoSS)
    i.SPI_Open                               0x00000bbc   Section        0  spi.o(i.SPI_Open)
    i.SYS_Init                               0x00000dd0   Section        0  sys_init.o(i.SYS_Init)
    i.ScanKey                                0x00000e70   Section        0  scankey.o(i.ScanKey)
    i.SystemCoreClockUpdate                  0x00000f20   Section        0  system_nuc100series.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x00000f84   Section        0  system_nuc100series.o(i.SystemInit)
    i.__0sprintf$6                           0x00000f88   Section        0  printf6.o(i.__0sprintf$6)
    i.__ARM_clz                              0x00000fb0   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x00000fde   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000fec   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000fee   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000ffc   Section        0  printf6.o(i._printf_core)
    _printf_core                             0x00000ffd   Thumb Code   768  printf6.o(i._printf_core)
    i._printf_post_padding                   0x00001300   Section        0  printf6.o(i._printf_post_padding)
    _printf_post_padding                     0x00001301   Thumb Code    32  printf6.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00001320   Section        0  printf6.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00001321   Thumb Code    44  printf6.o(i._printf_pre_padding)
    i._sputc                                 0x0000134c   Section        0  printf6.o(i._sputc)
    _sputc                                   0x0000134d   Thumb Code    10  printf6.o(i._sputc)
    i.check_collision                        0x00001358   Section        0  main.o(i.check_collision)
    i.clear_LCD                              0x000013dc   Section        0  lcd.o(i.clear_LCD)
    i.draw_Pixel                             0x00001434   Section        0  lcd.o(i.draw_Pixel)
    i.increase_point                         0x000014e4   Section        0  main.o(i.increase_point)
    i.init_LCD                               0x00001504   Section        0  lcd.o(i.init_LCD)
    i.init_SPI3                              0x0000152c   Section        0  lcd.o(i.init_SPI3)
    i.lcdSetAddr                             0x00001550   Section        0  lcd.o(i.lcdSetAddr)
    i.lcdWriteCommand                        0x0000160c   Section        0  lcd.o(i.lcdWriteCommand)
    i.lcdWriteData                           0x00001648   Section        0  lcd.o(i.lcdWriteData)
    i.main                                   0x00001688   Section        0  main.o(i.main)
    i.main_menu                              0x00001740   Section        0  main.o(i.main_menu)
    i.printC                                 0x0000179c   Section        0  lcd.o(i.printC)
    i.print_Line                             0x00001820   Section        0  lcd.o(i.print_Line)
    i.render_game                            0x00001844   Section        0  main.o(i.render_game)
    i.return_obstacle                        0x00001928   Section        0  main.o(i.return_obstacle)
    i.update_game                            0x0000194c   Section        0  main.o(i.update_game)
    .constdata                               0x00001a08   Section       56  clk.o(.constdata)
    .constdata                               0x00001a40   Section       16  main.o(.constdata)
    .data                                    0x20000000   Section       44  system_nuc100series.o(.data)
    .data                                    0x2000002c   Section     2000  lcd.o(.data)
    Font5x7                                  0x2000002c   Data         480  lcd.o(.data)
    .data                                    0x200007fc   Section        4  main.o(.data)
    .data                                    0x20000800   Section        4  rand.o(.data)
    _rand_state                              0x20000800   Data           4  rand.o(.data)
    .bss                                     0x20000804   Section     1024  lcd.o(.bss)
    .bss                                     0x20000c04   Section       28  main.o(.bss)
    STACK                                    0x20000c20   Section     1024  startup_nuc100series.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_nuc100series.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    32  startup_nuc100series.o(.text)
    NMI_Handler                              0x000000f5   Thumb Code     2  startup_nuc100series.o(.text)
    HardFault_Handler                        0x000000f7   Thumb Code     2  startup_nuc100series.o(.text)
    SVC_Handler                              0x000000f9   Thumb Code     2  startup_nuc100series.o(.text)
    PendSV_Handler                           0x000000fb   Thumb Code     2  startup_nuc100series.o(.text)
    SysTick_Handler                          0x000000fd   Thumb Code     2  startup_nuc100series.o(.text)
    ACMP_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    ADC_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    BOD_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    CAN0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    CAN1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    EINT0_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    EINT1_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    GPAB_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    GPCDEF_IRQHandler                        0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2C0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2C1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    I2S_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PDMA_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PS2_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWMA_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWMB_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    PWRWU_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    RTC_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SC012_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI2_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    SPI3_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR0_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR1_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR2_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    TMR3_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    UART02_IRQHandler                        0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    UART1_IRQHandler                         0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    USBD_IRQHandler                          0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    WDT_IRQHandler                           0x000000ff   Thumb Code     0  startup_nuc100series.o(.text)
    __aeabi_uidiv                            0x00000121   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000121   Thumb Code    44  uidiv.o(.text)
    __aeabi_idiv                             0x0000014d   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x0000014d   Thumb Code    40  idiv.o(.text)
    rand                                     0x00000175   Thumb Code    18  rand.o(.text)
    srand                                    0x00000187   Thumb Code     6  rand.o(.text)
    strlen                                   0x00000199   Thumb Code    14  strlen.o(.text)
    __aeabi_dadd                             0x000001a9   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x000002f1   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x000002fd   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x0000030d   Thumb Code   202  dmul.o(.text)
    __aeabi_i2d                              0x000003dd   Thumb Code    34  dflti.o(.text)
    __aeabi_d2iz                             0x00000405   Thumb Code    62  dfixi.o(.text)
    __aeabi_llsl                             0x0000044d   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0000044d   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000046d   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x0000046d   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0000048f   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0000048f   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x000004b5   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x000004b5   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x000004cf   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x00000575   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000575   Thumb Code     0  init.o(.text)
    CLK_EnableModuleClock                    0x00000599   Thumb Code    52  clk.o(i.CLK_EnableModuleClock)
    CLK_EnablePLL                            0x000005d5   Thumb Code   342  clk.o(i.CLK_EnablePLL)
    CLK_EnableXtalRC                         0x00000759   Thumb Code    12  clk.o(i.CLK_EnableXtalRC)
    CLK_GetHCLKFreq                          0x00000769   Thumb Code    12  clk.o(i.CLK_GetHCLKFreq)
    CLK_SetCoreClock                         0x000008f9   Thumb Code   156  clk.o(i.CLK_SetCoreClock)
    CLK_SetHCLK                              0x000009a1   Thumb Code   102  clk.o(i.CLK_SetHCLK)
    CLK_SetModuleClock                       0x00000a0d   Thumb Code   240  clk.o(i.CLK_SetModuleClock)
    CLK_WaitClockReady                       0x00000b15   Thumb Code    32  clk.o(i.CLK_WaitClockReady)
    GPIO_SetMode                             0x00000b3d   Thumb Code    46  gpio.o(i.GPIO_SetMode)
    OpenKeyPad                               0x00000b6d   Thumb Code    64  scankey.o(i.OpenKeyPad)
    SPI_DisableAutoSS                        0x00000bb1   Thumb Code    10  spi.o(i.SPI_DisableAutoSS)
    SPI_Open                                 0x00000bbd   Thumb Code   514  spi.o(i.SPI_Open)
    SYS_Init                                 0x00000dd1   Thumb Code   148  sys_init.o(i.SYS_Init)
    ScanKey                                  0x00000e71   Thumb Code   170  scankey.o(i.ScanKey)
    SystemCoreClockUpdate                    0x00000f21   Thumb Code    76  system_nuc100series.o(i.SystemCoreClockUpdate)
    SystemInit                               0x00000f85   Thumb Code     2  system_nuc100series.o(i.SystemInit)
    __0sprintf$6                             0x00000f89   Thumb Code    36  printf6.o(i.__0sprintf$6)
    __1sprintf$6                             0x00000f89   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __2sprintf                               0x00000f89   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __ARM_clz                                0x00000fb1   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x00000fdf   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000fed   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000fef   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    check_collision                          0x00001359   Thumb Code   126  main.o(i.check_collision)
    clear_LCD                                0x000013dd   Thumb Code    84  lcd.o(i.clear_LCD)
    draw_Pixel                               0x00001435   Thumb Code   170  lcd.o(i.draw_Pixel)
    increase_point                           0x000014e5   Thumb Code    26  main.o(i.increase_point)
    init_LCD                                 0x00001505   Thumb Code    38  lcd.o(i.init_LCD)
    init_SPI3                                0x0000152d   Thumb Code    26  lcd.o(i.init_SPI3)
    lcdSetAddr                               0x00001551   Thumb Code   182  lcd.o(i.lcdSetAddr)
    lcdWriteCommand                          0x0000160d   Thumb Code    56  lcd.o(i.lcdWriteCommand)
    lcdWriteData                             0x00001649   Thumb Code    60  lcd.o(i.lcdWriteData)
    main                                     0x00001689   Thumb Code   156  main.o(i.main)
    main_menu                                0x00001741   Thumb Code    64  main.o(i.main_menu)
    printC                                   0x0000179d   Thumb Code   126  lcd.o(i.printC)
    print_Line                               0x00001821   Thumb Code    36  lcd.o(i.print_Line)
    render_game                              0x00001845   Thumb Code   210  main.o(i.render_game)
    return_obstacle                          0x00001929   Thumb Code    32  main.o(i.return_obstacle)
    update_game                              0x0000194d   Thumb Code   170  main.o(i.update_game)
    Region$$Table$$Base                      0x00001a50   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001a70   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_nuc100series.o(.data)
    CyclesPerUs                              0x20000004   Data           4  system_nuc100series.o(.data)
    PllClock                                 0x20000008   Data           4  system_nuc100series.o(.data)
    gau32ClkSrcTbl                           0x2000000c   Data          32  system_nuc100series.o(.data)
    Font8x16                                 0x2000020c   Data        1520  lcd.o(.data)
    highscore                                0x200007fc   Data           4  main.o(.data)
    DisplayBuffer                            0x20000804   Data        1024  lcd.o(.bss)
    state                                    0x20000c04   Data          28  main.o(.bss)
    __initial_sp                             0x20001020   Data           0  startup_nuc100series.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000d5

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002274, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001a70, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          119    RESET               startup_nuc100series.o
    0x000000c0   0x000000c0   0x00000000   Code   RO          799  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         1078    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         1081    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         1083    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         1085    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         1086    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1088    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         1090    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         1079    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000004c   Code   RO          120  * .text               startup_nuc100series.o
    0x00000120   0x00000120   0x0000002c   Code   RO          800    .text               mc_p.l(uidiv.o)
    0x0000014c   0x0000014c   0x00000028   Code   RO          802    .text               mc_p.l(idiv.o)
    0x00000174   0x00000174   0x00000024   Code   RO          804    .text               mc_p.l(rand.o)
    0x00000198   0x00000198   0x0000000e   Code   RO          807    .text               mc_p.l(strlen.o)
    0x000001a6   0x000001a6   0x00000002   PAD
    0x000001a8   0x000001a8   0x00000164   Code   RO         1070    .text               mf_p.l(dadd.o)
    0x0000030c   0x0000030c   0x000000d0   Code   RO         1072    .text               mf_p.l(dmul.o)
    0x000003dc   0x000003dc   0x00000028   Code   RO         1074    .text               mf_p.l(dflti.o)
    0x00000404   0x00000404   0x00000048   Code   RO         1076    .text               mf_p.l(dfixi.o)
    0x0000044c   0x0000044c   0x00000020   Code   RO         1097    .text               mc_p.l(llshl.o)
    0x0000046c   0x0000046c   0x00000022   Code   RO         1099    .text               mc_p.l(llushr.o)
    0x0000048e   0x0000048e   0x00000026   Code   RO         1101    .text               mc_p.l(llsshr.o)
    0x000004b4   0x000004b4   0x00000000   Code   RO         1103    .text               mc_p.l(iusefp.o)
    0x000004b4   0x000004b4   0x000000be   Code   RO         1104    .text               mf_p.l(depilogue.o)
    0x00000572   0x00000572   0x00000002   PAD
    0x00000574   0x00000574   0x00000024   Code   RO         1114    .text               mc_p.l(init.o)
    0x00000598   0x00000598   0x0000003c   Code   RO          132    i.CLK_EnableModuleClock  clk.o
    0x000005d4   0x000005d4   0x00000184   Code   RO          133    i.CLK_EnablePLL     clk.o
    0x00000758   0x00000758   0x00000010   Code   RO          135    i.CLK_EnableXtalRC  clk.o
    0x00000768   0x00000768   0x00000010   Code   RO          137    i.CLK_GetHCLKFreq   clk.o
    0x00000778   0x00000778   0x00000080   Code   RO            3    i.CLK_GetPLLClockFreq  system_nuc100series.o
    0x000007f8   0x000007f8   0x00000080   Code   RO          141    i.CLK_GetPLLClockFreq  clk.o
    0x00000878   0x00000878   0x00000080   Code   RO          317    i.CLK_GetPLLClockFreq  spi.o
    0x000008f8   0x000008f8   0x000000a8   Code   RO          144    i.CLK_SetCoreClock  clk.o
    0x000009a0   0x000009a0   0x0000006c   Code   RO          145    i.CLK_SetHCLK       clk.o
    0x00000a0c   0x00000a0c   0x00000108   Code   RO          146    i.CLK_SetModuleClock  clk.o
    0x00000b14   0x00000b14   0x00000028   Code   RO          148    i.CLK_WaitClockReady  clk.o
    0x00000b3c   0x00000b3c   0x0000002e   Code   RO          284    i.GPIO_SetMode      gpio.o
    0x00000b6a   0x00000b6a   0x00000002   PAD
    0x00000b6c   0x00000b6c   0x00000044   Code   RO          654    i.OpenKeyPad        scankey.o
    0x00000bb0   0x00000bb0   0x0000000a   Code   RO          322    i.SPI_DisableAutoSS  spi.o
    0x00000bba   0x00000bba   0x00000002   PAD
    0x00000bbc   0x00000bbc   0x00000214   Code   RO          331    i.SPI_Open          spi.o
    0x00000dd0   0x00000dd0   0x000000a0   Code   RO          692    i.SYS_Init          sys_init.o
    0x00000e70   0x00000e70   0x000000b0   Code   RO          655    i.ScanKey           scankey.o
    0x00000f20   0x00000f20   0x00000064   Code   RO            4    i.SystemCoreClockUpdate  system_nuc100series.o
    0x00000f84   0x00000f84   0x00000002   Code   RO            5    i.SystemInit        system_nuc100series.o
    0x00000f86   0x00000f86   0x00000002   PAD
    0x00000f88   0x00000f88   0x00000028   Code   RO          966    i.__0sprintf$6      mc_p.l(printf6.o)
    0x00000fb0   0x00000fb0   0x0000002e   Code   RO         1106    i.__ARM_clz         mf_p.l(depilogue.o)
    0x00000fde   0x00000fde   0x0000000e   Code   RO         1120    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000fec   0x00000fec   0x00000002   Code   RO         1121    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000fee   0x00000fee   0x0000000e   Code   RO         1122    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000ffc   0x00000ffc   0x00000304   Code   RO          971    i._printf_core      mc_p.l(printf6.o)
    0x00001300   0x00001300   0x00000020   Code   RO          972    i._printf_post_padding  mc_p.l(printf6.o)
    0x00001320   0x00001320   0x0000002c   Code   RO          973    i._printf_pre_padding  mc_p.l(printf6.o)
    0x0000134c   0x0000134c   0x0000000a   Code   RO          975    i._sputc            mc_p.l(printf6.o)
    0x00001356   0x00001356   0x00000002   PAD
    0x00001358   0x00001358   0x00000084   Code   RO          721    i.check_collision   main.o
    0x000013dc   0x000013dc   0x00000058   Code   RO          429    i.clear_LCD         lcd.o
    0x00001434   0x00001434   0x000000b0   Code   RO          447    i.draw_Pixel        lcd.o
    0x000014e4   0x000014e4   0x00000020   Code   RO          722    i.increase_point    main.o
    0x00001504   0x00001504   0x00000026   Code   RO          448    i.init_LCD          lcd.o
    0x0000152a   0x0000152a   0x00000002   PAD
    0x0000152c   0x0000152c   0x00000024   Code   RO          449    i.init_SPI3         lcd.o
    0x00001550   0x00001550   0x000000bc   Code   RO          450    i.lcdSetAddr        lcd.o
    0x0000160c   0x0000160c   0x0000003c   Code   RO          451    i.lcdWriteCommand   lcd.o
    0x00001648   0x00001648   0x00000040   Code   RO          452    i.lcdWriteData      lcd.o
    0x00001688   0x00001688   0x000000b8   Code   RO          723    i.main              main.o
    0x00001740   0x00001740   0x0000005c   Code   RO          724    i.main_menu         main.o
    0x0000179c   0x0000179c   0x00000084   Code   RO          453    i.printC            lcd.o
    0x00001820   0x00001820   0x00000024   Code   RO          457    i.print_Line        lcd.o
    0x00001844   0x00001844   0x000000e4   Code   RO          725    i.render_game       main.o
    0x00001928   0x00001928   0x00000024   Code   RO          726    i.return_obstacle   main.o
    0x0000194c   0x0000194c   0x000000bc   Code   RO          727    i.update_game       main.o
    0x00001a08   0x00001a08   0x00000038   Data   RO          149    .constdata          clk.o
    0x00001a40   0x00001a40   0x00000010   Data   RO          729    .constdata          main.o
    0x00001a50   0x00001a50   0x00000020   Data   RO         1118    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001a70, Size: 0x00000804, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001a70   0x0000002c   Data   RW            6    .data               system_nuc100series.o
    0x2000002c   0x00001a9c   0x000007d0   Data   RW          459    .data               lcd.o
    0x200007fc   0x0000226c   0x00000004   Data   RW          730    .data               main.o
    0x20000800   0x00002270   0x00000004   Data   RW          805    .data               mc_p.l(rand.o)


    Execution Region ER_ZI (Exec base: 0x20000804, Load base: 0x00002274, Size: 0x0000081c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000804        -       0x00000400   Zero   RW          458    .bss                lcd.o
    0x20000c04        -       0x0000001c   Zero   RW          728    .bss                main.o
    0x20000c20        -       0x00000400   Zero   RW          117    STACK               startup_nuc100series.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1188        128         56          0          0       6808   clk.o
        46          0          0          0          0       1111   gpio.o
       818         40          0       2000       1024       7101   lcd.o
       892        108         16          4         28      24754   main.o
       244         10          0          0          0       1255   scankey.o
       670         34          0          0          0       3071   spi.o
        76         32        192          0       1024        788   startup_nuc100series.o
       160         12          0          0          0      35151   sys_init.o
       230         40          0         44          0     118839   system_nuc100series.o

    ----------------------------------------------------------------------
      4332        404        296       2048       2076     198878   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        40          0          0          0          0         72   idiv.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
       898          8          0          0          0        384   printf6.o
        36         12          0          4          0        120   rand.o
        14          0          0          0          0         60   strlen.o
        44          0          0          0          0         72   uidiv.o
       356          4          0          0          0        140   dadd.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        40          6          0          0          0         68   dflti.o
       208          6          0          0          0         88   dmul.o

    ----------------------------------------------------------------------
      2140         62          0          4          0       1564   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1222         36          0          4          0        980   mc_p.l
       912         26          0          0          0        584   mf_p.l

    ----------------------------------------------------------------------
      2140         62          0          4          0       1564   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6472        466        296       2052       2076     198482   Grand Totals
      6472        466        296       2052       2076     198482   ELF Image Totals
      6472        466        296       2052          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 6768 (   6.61kB)
    Total RW  Size (RW Data + ZI Data)              4128 (   4.03kB)
    Total ROM Size (Code + RO Data + RW Data)       8820 (   8.61kB)

==============================================================================

